version: "3"
services:
  redis:
    image: redis
    restart: always

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3
    restart: always

  postgres:
    image: postgres
    restart: always
    environment: 
      - DATABASE_HOST=127.0.0.1
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    ports: 
      - "5432:5432"
    volumes: 
      - ./docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    healthcheck:
      test: ["CMD", "pg_isready -U user"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: always
    
  minio:
    image: minio/minio
    volumes:
      - ./data/minio_root:/minio_root:z
      - ./data/certs:/root/.minio/certs:z
    command: "minio server /minio_root"
    env_file: ./env.minio
    restart: always
    ports:
      - "9000:9000"
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  outline:
    image: outlinewiki/outline:latest
    command: sh -c "yarn sequelize:migrate --env production-ssl-disabled && yarn start"
    environment:
      - DATABASE_URL=postgres://outlineusr:outlinepwd@postgres:5432/outline
      - DATABASE_URL_TEST=postgres://outlineusr:outlinepwd@postgres:5432/outline-test
      - REDIS_URL=redis://redis:6379
    env_file:
      - ./env.outline
      - ./env.slack
      - ./env.google
    restart: always
    depends_on:
      - postgres
      - redis
      - minio

  https-portal:
    image: steveltn/https-portal
    ports:
      - '80:80'
      - '443:443'
    links:
      - outline
      - minio
    restart: always
    volumes:
      - ./data/https-portal-data:/var/lib/https-portal
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      DOMAINS: 'outline.domain.name -> http://outline:3000'
      STAGE: production
      WEBSOCKET: true